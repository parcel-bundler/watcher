name: test
on:
  push:
    branches: [master]
  pull_request:

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        node: [18, 20]
        os: [ubuntu-latest, macos-latest, macos-14, windows-latest]
    runs-on: ${{matrix.os}}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          cache: yarn
          node-version: ${{matrix.node}}
      - name: Install watchman
        if: startsWith(matrix.os, 'macos')
        run: |
          wget https://github.com/facebook/watchman/releases/download/v2023.05.01.00/watchman-v2023.05.01.00-macos.zip
          unzip watchman-*-macos.zip
          cd watchman-v2023.05.01.00-macos
          sudo mkdir -p /usr/local/{bin,lib} /usr/local/var/run/watchman
          sudo cp bin/* /usr/local/bin
          sudo cp lib/* /usr/local/lib
          sudo chmod 755 /usr/local/bin/watchman
          sudo chmod 2777 /usr/local/var/run/watchman
          watchman -v
      - name: Install watchman
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          wget https://github.com/facebook/watchman/releases/download/v2023.06.19.00/watchman-v2023.06.19.00-linux.zip
          unzip watchman-*-linux.zip
          cd watchman-v2023.06.19.00-linux
          sudo mkdir -p /usr/local/{bin,lib} /usr/local/var/run/watchman
          sudo cp bin/* /usr/local/bin
          sudo cp lib/* /usr/local/lib
          sudo chmod 755 /usr/local/bin/watchman
          sudo chmod 2777 /usr/local/var/run/watchman
      - name: Copy watchman
        if: startsWith(matrix.os, 'windows')
        run: |
          Copy-Item -Recurse -Path watchman -Destination $home
          $env:PATH += ";$home\watchman\windows\bin"
          Add-Content $env:GITHUB_PATH "$home\watchman\windows\bin"
          watchman -v
      - run: yarn --frozen-lockfile
      - run: yarn test

  test-freebsd:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Test in FreeBSD
        uses: vmactions/freebsd-vm@v1
        with:
          usesh: true
          prepare: |
            pkg install -y -f curl node libnghttp2 npm yarn
            echo "~~~~ node -v ~~~~"
            node -v
            echo "~~~~ yarn --version ~~~~"
            yarn --version
          run: |
            yarn --frozen-lockfile
            yarn test

  test-wasm:
    runs-on: ubuntu-latest
    container:
      image: emscripten/emsdk
    steps:
      - uses: actions/checkout@v4
      - run: corepack enable
      - uses: actions/setup-node@v4
        with:
          cache: yarn
          node-version: 18
      - run: yarn --frozen-lockfile
      - run: make wasm-debug
      - run: TEST_WASM=1 yarn test
